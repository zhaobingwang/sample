@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->
    <div class="col-6" id="helloWorld" style="width:400px;height:300px;"></div>

    <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->
    <div class="col-6" id="bar" style="width:400px;height:300px;"></div>
</div>
<div class="row">
    <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->
    <div class="col-6" id="stackedLineChart" style="width:400px;height:300px;"></div>

    <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->
    <div class="col-6" id="pieLabelAlign" style="width:400px;height:300px;"></div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(function () {
            helloWorld();
            bar();
            stackedLineChart();
            pieLabelAlign();
        });
        function helloWorld() {
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('helloWorld'));

            // 指定图表的配置项和数据
            var option = {
                title: {
                    text: 'Hello,ECharts!'
                },
                tooltip: {},
                legend: {
                    data: ['销量']
                },
                xAxis: {
                    data: ["衬衫", "羊毛衫", "雪纺衫", "裤子", "高跟鞋", "袜子"]
                },
                yAxis: {},
                series: [{
                    name: '销量',
                    type: 'bar',
                    data: [5, 20, 36, 10, 10, 20]
                }]
            };

            // 使用刚指定的配置项和数据显示图表。
            myChart.setOption(option);
        }

        function bar() {
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('bar'));

            // 指定图表的配置项和数据
            myChart.setOption({
                legend: {},
                tooltip: {},
                dataset: {
                    source: []
                },
                // 声明一个 X 轴，类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。
                xAxis: { type: 'category' },
                // 声明一个 Y 轴，数值轴。
                yAxis: {},
                // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。
                series: []
            });
            myChart.showLoading();
            $.ajax({
                type: "GET",
                async: true,
                url: "api/echarts/product_data",
                dataType: "json",
                success: function (result) {
                    myChart.hideLoading();
                    var series = [];
                    for (var i = 0; i < result.source[0].length - 1; i++) {
                        series.push({ type: 'bar' });
                    }
                    myChart.setOption({
                        dataset: {
                            //dimensions: result.dimensions,
                            source: result.source
                        },
                        series: series
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(XMLHttpRequest.responseText);

                }
            });
        }

        // 折线图
        function stackedLineChart() {
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('stackedLineChart'));

            // 指定图表的配置项和数据
            myChart.setOption({
                legend: {},
                tooltip: {},
                dataset: {
                    dimensions: [],
                    source: [
                    ]
                },
                xAxis: { type: 'category' },
                yAxis: {},
                series: [
                ]
            });

            myChart.showLoading();
            $.ajax({
                type: "GET",
                async: true,
                url: "api/echarts/stacked_line_chart_data",
                dataType: "json",
                success: function (result) {
                    myChart.hideLoading();
                    var series = [];
                    for (var i = 0; i < result.dimensions.length - 1; i++) {
                        series.push({ type: 'line' });
                    }
                    myChart.setOption({
                        dataset: {
                            dimensions: result.dimensions,
                            source: result.source
                        },
                        series: series
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(XMLHttpRequest.responseText);

                }
            });
        }

        function pieLabelAlign() {
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('pieLabelAlign'));

            // 指定图表的配置项和数据
            myChart.setOption({
                legend: {},
                tooltip: {},
                dataset: {
                    source: [
                    ]
                },
                series: [{
                    type: 'pie',
                    radius: 60,
                    center: ['25%', '30%']
                    // No encode specified, by default, it is '2015'.
                }, {
                    type: 'pie',
                    radius: 60,
                    center: ['75%', '30%'],
                    encode: {
                        itemName: '产品',
                        value: '2018'
                    }
                }, {
                    type: 'pie',
                    radius: 60,
                    center: ['25%', '75%'],
                    encode: {
                        itemName: '产品',
                        value: '2019'
                    }
                }, {
                    type: 'pie',
                    radius: 60,
                    center: ['75%', '75%'],
                    encode: {
                        itemName: '产品',
                        value: '2020'
                    }
                }]
            });
            myChart.showLoading();
            $.ajax({
                type: "GET",
                async: true,
                url: "api/echarts/product_data",
                dataType: "json",
                success: function (result) {
                    myChart.hideLoading();
                    //var series = [];
                    //for (var i = 0; i < result.dimensions.length - 1; i++) {
                    //    series.push({ type: 'bar' });
                    //}
                    myChart.setOption({
                        dataset: {
                            //dimensions: result.dimensions,
                            source: result.source
                        },
                        //series: series
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(XMLHttpRequest.responseText);

                }
            });
        }
    </script>
}